name: Publish to NPM

on:
  push:
    tags:
      - "v*"

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          registry-url: "https://registry.npmjs.org"
          always-auth: true

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build package
        run: npm run build

      - name: Verify npm auth user
        run: npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Get package version
        id: package-version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Check if version already exists
        id: check-version
        run: |
          if npm view @dodysat/bmi@${{ steps.package-version.outputs.version }} version >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Version ${{ steps.package-version.outputs.version }} already exists on npm"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Version ${{ steps.package-version.outputs.version }} is new"
          fi

      - name: Publish to NPM
        if: steps.check-version.outputs.exists != 'true'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Skip publish if version exists
        if: steps.check-version.outputs.exists == 'true'
        run: |
          echo "Version ${{ steps.package-version.outputs.version }} already exists on npm. Skipping publish."
          echo "This is expected behavior when the same version tag is pushed multiple times."

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## What's Changed

            This release includes:
            - BMI calculator following WHO standards
            - TypeScript support with full type definitions
            - Metric and Imperial unit conversions
            - Health recommendations for each BMI category
            - Comprehensive input validation
            - 100% test coverage
            - **NEW**: Multi-language support (English and Indonesian)

            ## Installation

            ```bash
            npm install @dodysat/bmi
            ```

            ## Quick Start

            ```typescript
            import { calculateBMI } from '@dodysat/bmi';

            const result = calculateBMI({ weight: 70, height: 1.75 });
            console.log(`BMI: ${result.bmi}`); // 22.86
            console.log(`Category: ${result.categoryName}`); // "Normal Weight"

            // With Indonesian localization
            const resultId = calculateBMI({ weight: 70, height: 1.75, locale: 'id' });
            console.log(`Category: ${resultId.categoryName}`); // "Berat Badan Normal"
            ```
          draft: false
          prerelease: false
